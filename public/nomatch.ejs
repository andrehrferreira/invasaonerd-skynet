<!DOCTYPE html>
<html lang="pt-br">

<head>
	<title>
		<%= __('Appname') %>
	</title>
	<%- include('meta/header') %>

	<meta name="description" content="A maior comunidade nerd do brasil">
	<meta property="og:description" content="A maior comunidade nerd do brasil">

	<meta property="og:image" content="<%= settings.url %>/assets/img/logo-256-white.png">
	<meta property="og:image:type" content="image/png">
	<meta property="og:image:width" content="256">
	<meta property="og:image:height" content="256">

	<meta name="og:title" property="og:title" content="Invasão Nerd">
	<meta property="og:site_name" content="<%= __('Appname') %>">
	<meta property="og:locale" content="pt-br">
	<meta property="og:url" content="<%= settings.url %>">
	<meta property="og:type" content="website">

	<%- include('./meta/gtag.ejs') %>

	<%- include('components/app/navbar') %>
	<%- include('components/app/sidebar') %>
	<%- include('components/app/snackbar') %>
	<%- include('components/app/loading') %>
	<div id="app">
		<v-app dark>
			<div ref="ready" style="display: none;">
				<div>
					<in-sidebar :options="{ page: {} }" />
				</div>
				<div>
					<in-navbar />
				</div>
				<v-content>
					<v-container fill-height fluid class="pa-0">
						<v-layout justify-center align-center>
							<v-flex xs12>
								<v-card dark>
									<v-card-title primary-title>
										<v-flex xs12>
											<p class="title mb-0 text-xs-center">Não encontramos nada referente a {{ search }}</p>
										</v-flex>
									</v-card-title>
									<v-divider></v-divider>
									<v-card-text>
										<p class="subtitle text-xs-center" v-if="sugestions[0]">Você quis dizer "{{ sugestions[0].title }}" ?</p>
										<v-layout
											row class="noselect" id="sugestions" ref="sugestions" v-if="sugestions.length"
											:style="`overflow-x: ${ $vuetify.breakpoint.width > 500 ? 'hidden' : 'auto' }; overflow-y: hidden; cursor: grab;`"
											@mousedown.prevent="mouseDown" @mousemove.prevent="mouseMove" @mouseup.prevent="mouseUp"
										>
											<div
												v-show="scrollLeft > 50"
												class="in-slider in-left"
												@click.stop="slide('left')"
												v-ripple
											>
												<v-icon dark large style="margin-top: 120px; text-shadow: 1px 1px grey;">arrow_back_ios</v-icon>
											</div>
											<div
												v-show="scrollLeft !== scrolableArea"
												class="in-slider in-right"
												@click.stop="slide('right')"
												v-ripple
											>
												<v-icon dark large style="margin-top: 120px; text-shadow: 1px 1px grey;">arrow_forward_ios</v-icon>
											</div>
											<v-flex
												v-for="(page, index) in sugestions" :key="index"
												style="max-width: 280px" class="mr-3 animated fadeIn faster"
											 	style="border-radius: 5px"
											>
												<v-hover>
													<v-card slot-scope="{ hover }" width="280" :class="`elevation-${hover ? 12 : 2}`" @click.stop="goTo('/page/' + page.url)">
														<v-img :src="`/image/${page.url}/avatar.jpg`" height="280" width="280" cover>
															<v-container fluid fill-height :class="'pa-0 ' + (hover ? 'in-fade-image' : '')">
																<v-layout wrap fill-height>
																	<v-flex xs12 class="pl-2 pt-2">
																		<v-layout row wrap>
																			<v-flex xs12>
																				<a :href="'/page/' + page.url">
																					<v-layout row justify-space-between class="in-fade-image pa-2" style="border-top-left-radius: 30px; border-bottom-left-radius: 30px;">
																						<v-flex class="pr-2">
																							<v-avatar>
																								<v-img :src="`/image/${page.url}/miniavatar.jpg`"></v-img>
																							</v-avatar>
																						</v-flex>
																						<v-flex xs11 class="in-card-title" align-content-center justify-center>
																							<v-layout row wrap justify-start align-center>
																								<v-flex xs12>
																									<span class="title white--text font-weight-thin" v-html="page.title"></span>
																								</v-flex>
																								<v-flex v-if="page.nickname">
																									<span class="subtitle white--text">({{ page.nickname }})</span>
																								</v-flex>
																							</v-layout>
																						</v-flex>
																					</v-layout>
																				</a>
																			</v-flex>
																		</v-layout>
																	</v-flex>
																</v-layout>
															</v-container>
														</v-img>
													</v-card>
												</v-hover>
											</v-flex>
										</v-layout>
										<v-layout row wrap class="mt-3">
											<v-flex xs12 v-if="sugestions.length">
												<p class="text-xs-center">Ainda não é o que procura?</p>
											</v-flex>
											<v-flex xs12>
												<v-layout row justify-center>
													<v-btn
														color="success" :href="`/createpage?title=${search ? search : ''}`"
													>{{ user && user.admin ? 'Criar' : 'Sugerir' }} Página {{ search ? search : '' }}</v-btn>
												</v-layout>
											</v-flex>
										</v-layout>
									</v-card-text>
								</v-card>
							</v-flex>
						</v-layout>
					</v-container>
				</v-content>
				<div>
					<in-snackbar />
				</div>
			</div>
		</v-app>
	</div>
	<%- include('./meta/footer') %>
	<script>
		new Vue({
			store: new Vuex.Store({
				modules: {
					app: {
						namespaced: true,
						state: <%- include('store/app/state.js') %>,
						getters: <%- include('store/app/getters.js') %>,
						mutations: <%- include('store/app/mutations.js') %>,
						actions: <%- include('store/app/actions.js') %>
					}
				}
			}),
			el: '#app',
			computed: {
				...mapGetters('app', [
					'user'
				])
			},
			data() {
				var search = '<%- search %>' ? '<%- search %>' : ''
				if (search) {
					search = search.split('-').join(' ').trim()
				}
				return {
					sugestions: (<%- JSON.stringify(sugestions) %>),
					search: search,
					scrollLeft: 0,
					scrolableArea: 0,
					x: 0,
					down: false
				}
			},
			mounted() {
				const vue = this
				vue.$refs.ready.style.display = 'block'
				vue.$nextTick(() => {
					const elem = vue.$refs.sugestions
					if (vue.$refs.sugestions) {
						vue.scrollLeft = elem.scrollLeft
						vue.scrolableArea = elem.scrollWidth - elem.clientWidth
						elem.addEventListener('scroll', (event) => {
							const { scrollLeft, scrollWidth, clientWidth } = event.target
							const scrolableArea = (scrollWidth - clientWidth)
							vue.scrolableArea = scrolableArea
							vue.scrollLeft = scrollLeft
						})
					}
				})
			},
			created() {
				this.setUser(<%- JSON.stringify(user) %>)
			},
			methods: {
				...mapActions('app', [
					'setUser',
					'goTo'
				]),

				mouseDown (event) {
					this.down = true
					this.x = event.pageX
					this.$refs.sugestions.style.cursor = 'grabbing'
				},

				mouseMove (event) {
					if(this.down) {
						event.preventDefault()
						this.$refs.sugestions.scrollLeft = (this.scrollLeft - event.pageX) + this.x
						this.$refs.sugestions.style.cursor = 'grabbing'
					}
				},

				mouseUp (event) {
					this.down = false
					this.$refs.sugestions.style.cursor = 'grab'
				},

				slide (direction) {
					const vue = this
					const elem = vue.$refs.sugestions
					if (direction === 'left') {
						$(`#sugestions`).animate( { scrollLeft: '-=288' }, 200)
					} else {
						elem.scrollLeft = $(`#sugestions`).animate( { scrollLeft: '+=288' }, 200)
					}
				}
			},
			
			beforeMount() {
				var loading = document.querySelector("#loading")
				document.body.removeChild(loading)
			}
		})

	</script>

	<style>
		a {
			text-decoration: none !important;
		}

		span.headline.white--text {
			text-shadow: 1px 1px black;
		}

		.in-left {
			left: 0;
		}

		.in-right {
			right: 0;
		}

		.in-slider {
			position: absolute;
			z-index: 2;
			height: 280px;
			transition: all .2s linear;
			background-color: rgba(0, 0, 0, 0.1);
		}

		.in-slider:hover {
			background-color: rgba(0, 0, 0, 0.8);
			cursor: pointer;
		}

		.noselect {
			-webkit-touch-callout: none;
			/* iOS Safari */
			-webkit-user-select: none;
			/* Safari */
			-khtml-user-select: none;
			/* Konqueror HTML */
			-moz-user-select: none;
			/* Firefox */
			-ms-user-select: none;
			/* Internet Explorer/Edge */
			user-select: none;
			/* Non-prefixed version, currently
			supported by Chrome and Opera */
		}

	</style>
	</body>

</html>
