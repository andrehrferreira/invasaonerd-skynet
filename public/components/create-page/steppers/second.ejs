<template id="in-second-step">
	<v-container fluid :class="bp.xs ? 'pa-0' : ''">
		<v-layout row wrap>
			<v-flex xs12 id="stepper">

				<v-stepper v-model="e6" vertical v-for="(item, index) in items" :key="index">
					<div v-if="item === 'youtube'">
						<v-stepper-step :complete="e6 > index + 1" :step="index + 1">
							<span class="body-2 font-weight-thin">Youtube</span>
						</v-stepper-step>
						<v-stepper-content :step="index + 1" :class="bp.xs ? 'px-0' : ''">
							<div>
								<in-youtube-info :e6="e6" @push-step="pushStep" />
							</div>
						</v-stepper-content>
					</div>

					<div v-if="item === 'basic-infos'">
						<v-stepper-step :complete="e6 > index + 1" :step="index + 1">
							<span class="body-2 font-weight-thin">Informações Básicas</span>
						</v-stepper-step>
						<v-stepper-content :step="index + 1" :class="bp.xs ? 'px-0' : ''">
							<v-card dark>
								<v-card-title>
									<p class="title">Informe pelo menos 1 link para sua sugestão de página</p>
									<p class="mb-0 subtitle">Quanto mais links sobre a página você informar mais informações poderemos coletar</p>
								</v-card-title>
								<v-layout row wrap>
									<v-flex xs12 md6 v-if="form.website" class="pa-3">
										<v-text-field v-model="form.website.url" placeholder="Ex: https://.websiteoficial.com.br/" label="Website Oficial"
										 type="text" color="white" @input="getIcon">
											<v-avatar size="25" slot="prepend" v-if="form.website.icon">
												<v-img :src="form.website.icon" @error="setDefaultImage" alt=""></v-img>
											</v-avatar>
											<v-avatar class="in-modal-avatar-align" size="25" slot="prepend" v-if="!form.website.icon">
												<span style="width: 35px; height: auto;" v-html="icons.website"></span>
											</v-avatar>
										</v-text-field>
									</v-flex>

									<v-flex xs12 md6 class="pa-3">
										<v-text-field v-model="form.facebook.url" placeholder="Ex: https://www.facebook.com/Oficial/" label="Facebook Oficial"
										 type="text" color="white" @input="setInput($event, 'facebook')">
											<v-avatar class="in-modal-avatar-align" size="25" slot="prepend">
												<span style="width: 35px; height: auto;" v-html="icons.facebook"></span>
											</v-avatar>
										</v-text-field>
									</v-flex>

									<v-flex xs12 md6 class="pa-3">
										<v-text-field v-model="form.youtube.url" placeholder="Ex: https://www.youtube.com/user/Oficial/" @input="setInput($event, 'youtube')"
										 label="Canal Oficial do Youtube" type="text" color="white" :disabled="pageInfos.youtube !== undefined">
											<v-avatar class="in-modal-avatar-align" size="25" slot="prepend">
												<span style="width: 35px; height: auto;" v-html="icons.youtube"></span>
											</v-avatar>
										</v-text-field>
									</v-flex>

									<v-flex xs12 md6 class="pa-3">
										<v-text-field v-model="form.twitter.url" placeholder="Ex: https://twitter.com/Oficial/" label="Twitter Oficial"
										 type="text" color="white" @input="setInput($event, 'twitter')">
											<v-avatar class="in-modal-avatar-align" size="25" slot="prepend">
												<span style="width: 35px; height: auto;" v-html="icons.twitter"></span>
											</v-avatar>
										</v-text-field>
									</v-flex>

									<v-flex xs12 md6 class="pa-3">
										<v-text-field v-model="form.instagram.url" placeholder="Ex: https://www.instagram.com/Oficial/"
										 label="Instagram Oficial" type="text" color="white" @input="setInput($event, 'instagram')">
											<v-avatar class="in-modal-avatar-align" size="25" slot="prepend">
												<span style="width: 35px; height: auto;" v-html="icons.instagram"></span>
											</v-avatar>
										</v-text-field>
									</v-flex>

									<v-flex xs12 md6 class="pa-3">
										<v-text-field v-model="form.spotify.url" placeholder="Ex: https://open.spotify.com/album/Oficial"
										 label="Album Oficial do Spotify" type="text" color="white" @input="setInput($event, 'spotify')">
											<v-avatar class="in-modal-avatar-align" size="25" slot="prepend">
												<span style="width: 35px; height: auto;" v-html="icons.spotify"></span>
											</v-avatar>
										</v-text-field>
									</v-flex>
								</v-layout>
								<v-card-actions>
									<v-spacer></v-spacer>
									<v-btn v-if="e6 !== 1" flat @click="pushStep({ payload: e6 - 1 })">ANTERIOR</v-btn>
									<v-btn v-if="e6 === 1" flat @click="setStep(step - 1)">VOLTAR</v-btn>
									<v-btn color="success" @click="pushStep({ payload: e6 + 1, change: false, item: item})" :disabled="isAllVoid() || !isAllValid()">SALVAR</v-btn>
								</v-card-actions>
							</v-card>
						</v-stepper-content>
					</div>

					<div v-if="item === 'twitter'">
						<v-stepper-step :complete="e6 > index + 1" :step="index + 1">
							<span class="body-2 font-weight-thin">Twitter</span>
						</v-stepper-step>
						<v-stepper-content :step="index + 1" :class="bp.xs ? 'px-0' : ''">
							<div>
								<in-twitter-info :e6="e6" @push-step="pushStep" />
							</div>
						</v-stepper-content>
					</div>

					<div v-if="item === 'instagram'">
						<v-stepper-step :complete="e6 > index + 1" :step="index + 1">
							<span class="body-2 font-weight-thin">Instagram</span>
						</v-stepper-step>
						<v-stepper-content :step="index + 1" :class="bp.xs ? 'px-0' : ''">
							<div>
								<in-instagram-info v-if="(items.indexOf('instagram') + 1) === e6" :e6="e6" @push-step="pushStep" />
							</div>
						</v-stepper-content>
					</div>
				</v-stepper>
				</div>
		</v-layout>
		<v-layout v-if="e6 === this.items.length + 1">
			<v-flex xs12 class="mt-3">
				<p class="text-xs-center">Tudo Certo!</p>
			</v-flex>
		</v-layout>
	</v-container>
</template>

<script>
	Vue.component('in-second-step', {
		template: '#in-second-step',
		computed: {
			...mapGetters('create-page', [
				'pageInfos',
				'step'
			]),
			bp () {
				return this.$vuetify.breakpoint
			},
			...mapGetters('app', [
				'windowWidth',
				'icons'
			])
		},
		data() {
			return {
				e6: 1,
				items: ['youtube', 'basic-infos'],
				form: {
					website: { title: '', url: '', icon: '' },
					facebook: { url: '' },
					youtube: { url: '' },
					instagram: { url: '' },
					twitter: { url: '' },
					spotify: { url: '' },
				}
			}
		},
		mounted () {
			const { pageInfos, form } = this
			if (pageInfos.website) {
				this.getIcon(pageInfos.website.url)
				form.website.title = pageInfos.title
				form.website.url = pageInfos.website.url
			}
			if (pageInfos.website) form.website = pageInfos.website
			if (pageInfos.youtube) form.youtube = { url: pageInfos.youtube.url }
			if (pageInfos.facebook) form.facebook = { url: pageInfos.facebook.url }
			if (pageInfos.instagram) form.instagram = { url: pageInfos.instagram.url }
			if (pageInfos.twitter) form.twitter = { url: pageInfos.twitter.url }
			if (pageInfos.spotify) form.spotify = { url: pageInfos.spotify.url }
		},
		created() {
			if (!this.pageInfos.categories.some(cat => cat.text.toLowerCase().includes('youtube'))) {
				this.items = this.items.filter(item => item !== 'youtube')
			}
		},
		methods: {
			...mapActions('create-page', [
				'setPageInfos',
				'setValidStep',
				'setStep'
			]),

			setInput (event, type) {
				const pageInfos = this.$clearReactive(this.pageInfos)
				pageInfos[type] = { url: event }
				this.setPageInfos(pageInfos)
			},

			isAllVoid() {
				return Object.entries(this.form).every(([key, value]) => {
					return value.url === ''
				})
			},

			getIcon(url) {
				const vm = this
				if (url) {
					if (url.includes('http') || url.includes('www')) {
						vm.$http.post('/api/website-icon', { url: url })
							.then(res => {
								vm.form.website.icon = res.data.icon
							})
					}
				}
			},

			isAllValid () {
				return Object.entries(this.form).filter(([key, value]) => {
					return value.url !== ''
				}).every(([key, value]) => {
					return this.isValidLink(value.url)
				})
			},

			isValidLink(link) {
				if (link) {
					return link.includes('http://') || link.includes('https://') || link.includes('www.')
				}
				return false
			},

			setDefaultImage() {
				this.form.website.icon = '/assets/img/avatardefault.jpeg'
				console.clear()
			},

			pushStep({ payload, change, item }) {
				const { pageInfos, form } = this
				if (change) {
					if (pageInfos.website) {
						this.getIcon(pageInfos.website.url)
						form.website.title = pageInfos.title
						form.website.url = pageInfos.website.url
					}
					if (pageInfos.website) form.website = pageInfos.website
					if (pageInfos.youtube) form.youtube = { url: pageInfos.youtube.url }
					if (pageInfos.facebook) form.facebook = { url: pageInfos.facebook.url }
					if (pageInfos.instagram) form.instagram = { url: pageInfos.instagram.url }
					if (pageInfos.twitter) form.twitter = { url: pageInfos.twitter.url }
					if (pageInfos.spotify) form.spotify = { url: pageInfos.spotify.url }
				}
				if (item === 'basic-infos') {
					if (form.instagram.url && !this.items.includes('instagram')) this.items.push('instagram')
					if (!form.instagram.url && this.items.includes('instagram')) this.items = this.items.filter(item => item !== 'instagram')
					if (form.youtube.url && !this.items.includes('youtube')) this.items.push('youtube')
					if (!form.youtube.url && this.items.includes('youtube')) this.items = this.items.filter(item => item !== 'youtube')
					if (form.twitter.url && !this.items.includes('twitter')) this.items.push('twitter')
					if (!form.twitter.url && this.items.includes('twitter')) this.items = this.items.filter(item => item !== 'twitter')
					if (form.instagram.url) pageInfos.instagram = form.instagram
					if (form.twitter.url) pageInfos.twitter = { url: this.excludeMobile(form.twitter.url) }
					if (form.youtube.url) pageInfos.youtube ? pageInfos.youtube.url = form.youtube.url : pageInfos.youtube = { url: form.youtube.url }
					if (form.website.url) pageInfos.website = form.website
					if (form.facebook.url) pageInfos.facebook = this.excludeMobile(form.facebook)
					if (form.spotify.url) pageInfos.spotify = form.spotify
					this.setPageInfos(pageInfos)
				}
				this.setValidStep(payload > this.items.length)
				this.e6 = payload
			},

			excludeMobile (link) {
				if (typeof link === 'string') {
					if (link.includes('//mobile.')) link = link.replace('//mobile.', '//')
					if (link.includes('//m.')) link.url = link.replace('//m.', '//')
				} else {
					if (link.url.includes('//mobile.')) link.url = link.url.replace('//mobile.', '//')
					if (link.url.includes('//m.')) link.url = link.url.replace('//m.', '//')
				}
				return link
			}
		}
	})
</script>


<style>
	@media (max-width: 600px) {
		.theme--dark.v-stepper--vertical .v-stepper__content:not(:last-child) {
			border-left: none;
		}

		.v-stepper--vertical .v-stepper__content {
			margin: 0;
			padding: 0 15px;
			width: 100%;
		}
	}

	#stepper .v-stepper__step--active>span {
		background-color: #0277BD !important;
		border-color: #0277BD !important;
	}
	#stepper .v-stepper__step--complete>span {
		background-color: #558B2F !important;
		border-color: #558B2F !important;
	}
</style>