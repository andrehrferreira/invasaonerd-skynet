<template id="in-basic-infos-edit">
  <div class="row animated fadeIn py-4">
    <div class="col-12">
      <div class="row justify-center py-1 px-5" v-if="!editing" v-for="(info, index) of editableInfos" :key="index">
        <v-btn
          color="teal"
          class="col-xs-12 col-md-6 offset-md-3"
          @click.stop="editInfo(info)"
        >
          Configurar {{ formatName(info.key) }}
        </v-btn>
      </div>
      <div class="row" v-if="editing">
        <div class="col-12" v-if="editingInfo.key === 'youtube'">
          <in-basic-infos-edit-youtube
            :info="editingInfo"
            @save-config="saveConfig"
            @cancel-edit="cancelEditing"
          />
        </div>
        <div class="col-12" v-else-if="editingInfo.key === 'twitter'">
          <in-basic-infos-edit-twitter
            :info="editingInfo"
            @save-config="saveConfig"
            @cancel-edit="cancelEditing"
          />
        </div>
        <div class="col-12" v-else>
          <div class="row text-center">
            <h3 class="col-12">NÃ£o implementado</h3>
          </div>
          <div class="row">
            <v-btn
              @click.stop="editing = !editing"
              class="btn btn-info col-md-4 offset-md-4 col-sm-12 mt-2"
            >Voltar</v-btn>
          </div>
        </div>
      </div>
      <div class="row" v-if="!editing">
        <div class="col-md-6 offset-md-3 col-sm-12 mt-2">
          <div class="row d-flex justify-content-around">
            <v-btn
              @click.stop="$emit('back-to-link')"
              color="info"
            >Voltar</v-btn>
            <v-btn
              @click.stop="$emit('save-basic-infos', editableInfos)"
              color="success"
            >Salvar</v-btn>
          </div>
        </div>
    </div>
  </div>
</template>

<script>
  Vue.component('in-basic-infos-edit', {
    template: '#in-basic-infos-edit',
    computed: {
      ...mapGetters('page', [
        'page'
      ])
    },
    props: ['listInfos'],
    data () {
      return {
        editableInfos: [],
        editing: false,
        editingInfo: {}
      }
    },
    mounted () {
      this.listInfos.map(info => {
        if (!info.fail) {
          this.editableInfos.push(info)
        }
      })
    },
    methods: {
      ...mapActions('page', [
        'setPageEntry'
      ]),

      formatName (name) {
        return name[0].toUpperCase() + name.slice(1, name.length)
      },

      editInfo (info) {
        this.editingInfo = info
        this.editing = true
      },
      cancelEditing () {
        this.editing = false
      },
      saveConfig (editingInfo, avatar, cover) {
        if (avatar || cover) {
          const { configs } = this.page
          if (avatar) configs.images.avatar = avatar
          if (cover) configs.images.cover = cover
          this.setPageEntry({
            entry: 'configs',
            data: configs
          })
        }
        this.editableInfos = this.editableInfos.map(info => {
          if (info.key === editingInfo.key) return editingInfo
          return info
        })
        this.editingInfo = {}
        this.editing = false
      }
    }
  })
</script>