<template id="in-template-videos">
	<section class=" animated fadeIn" ref="videos">

		<div class="row justify-end">
			<div class="in-edit-block-position text-left justify-end" v-if="editMode">
				<v-btn fab color="" class=" move mr-1" title="<%= __('Mover') %>" v-if="1 === 2">
					<v-icon color="primary">zoom_out_map</v-icon>
				</v-btn>

				<v-tooltip :open-delay="50" :close-delay="50" bottom>
					<v-btn
						slot="activator" v-if="checkYoutube(page.youtube)"
						class="mr-1 animated zoomIn faster" fab small
						@click.stop="editType('videos')"
					>
						<v-icon color="green">edit</v-icon>
					</v-btn>
					<span>Editar Vídeos</span>
				</v-tooltip>

				<v-tooltip :open-delay="50" :close-delay="50" bottom>
					<v-btn slot="activator" fab small class="animated zoomIn faster" @click.stop="removeType('videos')">
						<v-icon color="#ef001c">delete</v-icon>
					</v-btn>
					<span>Deletar Vídeos</span>
				</v-tooltip>
			</div>
		</div>

		<h3 class="mt-3">
			<%= __('Vídeos') %>
		</h3>
		<div class="in-editor-section in-videos-preview" id="videos">
			<v-layout row wrap justify-end v-if="toPlay.id">
				<v-tooltip :open-delay="50" :close-delay="50" left>
					<v-btn slot="activator" icon color="#ef001c" @click.stop="toPlay = {}">
						<v-icon>close</v-icon>
					</v-btn>
					<span>Fechar Vídeo</span>
				</v-tooltip>
			</v-layout>
			<div class="row">
				<div v-if="toPlay.id" :id="toPlay.id" class="col-12 embed-responsive embed-responsive-16by9">
					<iframe class="in-videos-item-player-iframe" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
					 :src="'https://www.youtube.com/embed/' + toPlay.id + '?autoplay=1'">
					</iframe>
				</div>
			</div>
			<swiper :options="swiperOption">
				<swiper-slide v-for="(video, index) in page.videos" :key="index" class="in-videos-preview-item">
					<div class="text-left" @click.stop="play(video)" :title="video.name">
						<v-icon color="white" size="70px" class="absolute_position" dark>play_arrow</v-icon>
						<div class="in-videos-preview-item-thumb">
							<div class="overlay"></div>
								<img class="in-videos-preview-item-thumb" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen :src="video.thumbnails.medium.url" />
						</div>
						<div class="in-videos-preview-item-title">
							<p>{{video.title}}</p>
						</div>
						<div class="in-videos-preview-item-author">
							Publicação: {{ new Date(video.publishedAt).toLocaleDateString() }}
						</div>
					</div>
				</swiper-slide>

				<!-- Optional controls -->
				<div class="swiper-button-prev" slot="button-prev"></div>
				<div class="swiper-button-next" slot="button-next"></div>
				<div class="swiper-scrollbar" slot="scrollbar"></div>
				<div class="swiper-pagination" slot="pagination"></div>
			</swiper>
		</div>
		<div class="andre-margin-in-page"></div>
	</section>
</template>

<script>
	Vue.component("in-template-videos", {
		template: "#in-template-videos",
		computed: {
			...mapGetters('page', [
				'page',
				'editMode',
				'swiperOption'
			])
		},
		data() {
			return {
				toPlay: {}
			}
		},
		methods: {
			...mapActions('page', [
				'toggleModal',
				'setAdding',
				'setEditingType',
				'removeType'
			]),
			...mapActions('app', [
				'scrollPageTo',
			]),

			checkYoutube(youtube) {
        if (youtube) if (youtube.config) return false
        else return true
      },

			play(video) {
				this.toPlay = {}
				setTimeout(() => {
					this.toPlay = video
				}, 50)
				setTimeout(() => {
					this.scrollPageTo(video.id)
				}, 100)
			},

			editType(type) {
				this.setEditingType(type)
				this.toggleModal(false)
				this.setAdding(true)
				setTimeout(() => {
					this.scrollPageTo(type)
				}, 20)
			}
		}
	})

</script>

<style>
	.in-videos-preview {
		width: 100%;
		text-align: center;
		flex-wrap: wrap;
		overflow: hidden;
	}

	.in-videos-preview .swiper-container {
		width: 100%;
		height: 260px !important;
	}

	.in-video-preview .swiper-slide {
		width: 240px !important;
		height: 260px;
		-webkit-border-radius: 3px;
		-moz-border-radius: 3px;
		border-radius: 3px;
	}

	.in-videos-preview-item {
		width: 240px;
		height: 230px;
		overflow: hidden;
		display: -webkit-box;
		display: -moz-box;
		display: -ms-flexbox;
		display: -webkit-flex;
		display: flex;
		flex-wrap: wrap;
		align-items: flex-start;
		text-align: left !important;
		-webkit-transition: 0.2s ease-in-out;
		-moz-transition: 0.2s ease-in-out;
		-o-transition: 0.2s ease-in-out;
		transition: 0.2s ease-in-out;
		cursor: pointer;
	}

	.in-videos-preview .in-editor-section .swipper-wrapper {
		padding-top: 10px;
	}

	.in-videos-preview-item:hover {
		z-index: 1;
		/*box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);*/
		transform: scale(1.05, 1.05);
		-webkit-transform: scale(1.05, 1.05);
		-moz-transform: scale(1.05, 1.05);
		-o-transform: scale(1.05, 1.05);
		-ms-transform: scale(1.05, 1.05);
	}

	.in-videos-preview-item.swiper-slide {
		background: none;
	}

	.in-videos-preview-item-thumb {
		width: 100%;
		z-index: 999;
	}

	.in-videos-preview-item-title {
		margin-top: 10px;
		text-shadow: none;
		padding-top: 0px;
		line-height: 18px;
		color: white;
		font-size: 13px;
		font-weight: 500;

	}



	.in-videos-preview-item-author {
		text-shadow: none;
		padding-top: 0px;
		line-height: 10px;
		margin-top: -10px;
		color: white;
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
		font-size: 12px;
		font-weight: 300;
	}

	.in-videos-item-player {
		height: 350px;
	}

	.in-videos-item-player-iframe {
		height: auto;
		padding: 0 10px;
		width: 100%;
	}

	.swiper-container.swiper-container-horizontal {
		padding-top: 10px;
	}

	.absolute_position{
		position: absolute;
		top: 70px;
		left: 50%;
		/* bring your own prefixes */
		transform: translate(-50%, -50%);
		text-shadow: 0 3px 10px rgba(0, 0, 0, 0.4)
	}
</style>
