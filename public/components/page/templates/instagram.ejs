<template id="in-template-instagram">
	<section class=" animated fadeIn" ref="games">

		<div class="row justify-end">
			<div class="in-edit-block-position text-left justify-end" v-if="editMode">
				<v-btn fab color="" class=" move mr-1" title="<%= __('Mover') %>" v-if="1 === 2">
					<v-icon color="primary">zoom_out_map</v-icon>
				</v-btn>

				<v-tooltip :open-delay="50" :close-delay="50" bottom>
					<v-btn
						slot="activator"
						class="mr-1 animated zoomIn faster" fab small
						@click.stop="editType('basic-infos')"
					>
						<v-icon color="green">edit</v-icon>
					</v-btn>
					<span>Editar Instagram</span>
				</v-tooltip>

				<v-tooltip :open-delay="50" :close-delay="50" bottom>
					<v-btn slot="activator" fab small class="animated zoomIn faster" @click.stop="removeType('instagram')">
						<v-icon color="#ef001c">delete</v-icon>
					</v-btn>
					<span>Deletar Instagram</span>
				</v-tooltip>
			</div>
		</div>

		<h3 class="mt-3"><%= __('Instagram') %></h3>
		<v-layout v-if="loading">
			<in-loading />
		</v-layout>
		<v-layout row wrap v-else-if="infos.id">
			<v-flex xs12 class="py-2">
				<v-layout row justify-start>
					<v-flex xs4 md3 lg2 xl1>
						<v-layout justify-center>
							<a :href="'https://instagram.com/' + infos.username" target="_blank">
								<v-avatar :size="imageSize(bp)">
									<v-img width="100%" height="auto" :src="infos.profile_pic_url" cover></v-img>
								</v-avatar>
							</a>
						</v-layout>
					</v-flex>
					<v-flex xs8 md9 lg10 xl11>
						<v-layout row wrap>
							<v-flex xs12>
								<a :href="'https://instagram.com/' + infos.username" target="_blank" class="title grey--text">@{{ infos.username }}</a>
							</v-flex>
							<v-flex xs12>
								<v-layout justify-start>
									<div class="mr-3">
										<p class="mb-0 text-xs-center">
											<span class="title font-weight-bold">{{ infos.edge_owner_to_timeline_media.count }}</span>
											<span class="caption grey--text">posts</span>
										</p>
									</div>
									<div class="mr-3">
										<p class="mb-0 text-xs-center">
											<span class="title font-weight-bold">{{ formatNumberToString(infos.edge_followed_by.count) }}</span>
											<span class="caption grey--text">Seguidores</span>
										</p>
									</div>
									<div class="mr-3">
										<p class="mb-0 text-xs-center">
											<span class="title font-weight-bold">{{ formatNumberToString(infos.edge_follow.count) }}</span>
											<span class="caption grey--text">Seguindo</span>
										</p>
									</div>
								</v-layout>
							</v-flex>
							<v-flex xs12 v-if="bp.smAndUp">
								<v-layout row wrap>
									<v-flex xs12>
										<p class="mb-0 font-weight-bold">{{ infos.full_name }}</p>
									</v-flex>
									<v-flex xs12>
										{{ infos.biography }}
									</v-flex>
									<v-flex xs12>
										<a class="grey--text" v-if="infos.external_url" :href="infos.external_url" target="_blank">
											{{ infos.external_url }}
										</a>
									</v-flex>
								</v-layout>
							</v-flex>
						</v-layout>
					</v-flex>
				</v-layout>
				<v-layout row wrap v-if="bp.xs" class="mt-3">
					<v-flex xs12>
						<p class="mb-0 font-weight-bold">{{ infos.full_name }}</p>
					</v-flex>
					<v-flex xs12>
						{{ infos.biography }}
					</v-flex>
					<v-flex xs12>
						<a class="grey--text" v-if="infos.external_url" :href="infos.external_url" target="_blank">
							{{ infos.external_url }}
						</a>
					</v-flex>
				</v-layout>
			</v-flex>
			<v-flex xs12>
				<v-divider></v-divider>
			</v-flex>
			<v-flex xs12 v-if="infos.is_private">
				Não foi possível exibir os posts por que este perfil é privado.
			</v-flex>
			<v-flex v-else>
				<v-card color="transparent" flat>
					<v-container class="px-0" grid-list-md fluid>
						<v-layout row wrap>
							<v-flex
								v-for="({ node }, index) in infos.edge_owner_to_timeline_media.edges"
								:key="index" xs12 sm6 md4 xl2 d-flex v-if="index < length"
							>
								<v-hover>
									<v-card flat tile class="d-flex" slot-scope="{ hover }" :hover="hover" @click.stop="() => {
											dialog = true
											midiaLink = node.shortcode
										}">
										<v-img :src="node.thumbnail_resources[bp.lg ? 3 : 2].src" cover :alt="node.accessibility_caption">
											<v-container class="pa-3" fill-height :style="hover ? 'background-color: rgba(0,0,0,0.6)' : ''">
												<v-layout fill-height justify-center align-center>
													<v-flex v-if="hover">
														<p class="body-2 text-xs-right">
															<i class="fas fa-heart"></i> {{ formatNumberToString(node.edge_liked_by.count) }}
														</p>
													</v-flex>
													<v-spacer>
														<v-btn icon fab absolute small style="top: 0; right: 0;" v-if="node.__typename === 'GraphSidecar'">
															<v-icon>collections</v-icon>
														</v-btn>
														<v-btn icon fab absolute small style="top: 0; right: 0;" v-if="node.__typename === 'GraphVideo'">
															<v-icon>videocam</v-icon>
														</v-btn>
													</v-spacer>
													<v-flex v-if="hover">
														<p class="body-2 text-xs-left">
															<i class="fas fa-comment"></i> {{ formatNumberToString(node.edge_media_to_comment.count) }}
														</p>
													</v-flex>
												</v-layout>
											</v-container>
										</v-img>
									</v-card>
								</v-hover>
							</v-flex>
						</v-layout>
					</v-container>
				</v-card>
				<v-layout justify-center>
					<v-btn flat small v-if="length === 6" @click.stop="length = 12">Ver Mais</v-btn>
					<v-btn v-else flat small :href="'https://www.instagram.com/' + infos.username" target="_blank">Ver Mais</v-btn>
				</v-layout>
			</v-flex>
		</v-layout>
		<v-layout row wrap v-else>
			<v-flex xs12>
				<v-alert :value="error" type="error">
					<v-layout row wrap>
						<v-flex xs12>
							Ocorreu um erro ao atualizar os dados do instagram, caso o erro persista, verifique se o este link
							('{{ page.instagram.url }}') corresponde ao link do instagram de {{ page.title }}
						</v-flex>
						<v-flex xs12>
							<v-layout justify-start>
								<v-btn flat class="py-0 ml-0" small transition="scale-transition" @click.stop="() => {
									error = false
									getInstagramInfos('/api/instagram?link=' + page.instagram.url)	
								}">
									Tentar Novamente
								</v-btn>
							</v-layout>
						</v-flex>
					</v-layout>
					</v-alert>
			</v-flex>
		</v-layout>
		<v-dialog v-model="dialog" max-width="935" v-if="midiaLink !== ''">
			<in-template-instagram-midia :link="midiaLink" @close-modal="dialog = false"/>
		</v-dialog>
		<div class="andre-margin-in-page"></div>
	</section>
</template>

<script>
	Vue.component('in-template-instagram', {
		template: '#in-template-instagram',
		computed: {
      ...mapGetters('page', [
        'page',
        'editMode',
        'swiperOption'
			]),
			bp () {
				return this.$vuetify.breakpoint
			}
		},
		watch: {
			dialog: function (val) {
				if (!val) this.midiaLink = ''
			}
		},
		data () {
			return {
				loading: false,
				infos: {},
				error: false,
				length: 6,
				midiaLink: '',
				dialog: false
			}
		},
		created () {
			const vue = this
			const { page } = vue
			if (page.temp.instagram) {
				if (page.temp.instagram.url === page.instagram.url) return vue.infos = page.temp.instagram.infos
			}
			this.getInstagramInfos('/api/instagram?link=' + this.page.instagram.url)
		},
		methods: {
      ...mapActions('page', [
        'toggleModal',
        'setAdding',
        'setEditingType',
				'removeType',
				'setPageEntry'
      ]),
      ...mapActions('app', [
        'scrollPageTo',
			]),

			formatNumberToString (number) {
				var string = number + ''
				if (string.length > 8) return `${string[0] + string[1] + string[2]}mi`
				if (string.length > 7) return `${string[0] + string[1]},${string[2]}mi`
				if (string.length > 6) return `${string[0]},${string[1]}mi`
				if (string.length > 5) return `${string[0] + string[1] + string[3]}mil`
				if (string.length > 4) return `${string[0] + string[1]},${string[2]}mil`
				if (string.length > 3) return `${string[0]},${string[1]}mil`
				return string
			},

			imageSize (bp) {
				if (bp.xl) return 100
				if (bp.mdAndUp) return 120
				if (bp.sm) return 100
				return 75
			},

			getInstagramInfos: async function (url) {
				const vue = await this
				vue.loading = await true
				try {
					const { data } = await vue.$http.get(url)
					if (data.id) {
						vue.infos = await data
						var { temp } = vue.page
						if (!temp) temp = {}
						temp.instagram = {
							url: vue.page.instagram.url,
							infos: data
						}
						vue.setPageEntry({
							entry: 'temp',
							data: temp
						})
					}	else {
						vue.error = await true
					}
				} catch (err) {
					vue.error = await true
				}
				vue.loading = await false
			},

			editType (type) {
        this.setEditingType(type)
        this.setAdding(true)
      }
		}
	})
</script>