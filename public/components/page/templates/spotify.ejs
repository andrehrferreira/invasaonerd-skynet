<template id="in-template-spotify">
	<section class=" animated fadeIn" style="padding: 10px 0;" ref="spotify">
		<div class="row justify-end">
			<div class=" text-left justify-end" v-if="editMode">
				<v-tooltip :open-delay="50" :close-delay="50" bottom>
					<v-btn slot="activator" fab small class="animated zoomIn faster" @click.stop="removeType('spotify')">
						<v-icon color="#ef001c">delete</v-icon>
					</v-btn>
					<span>Deletar Spotify</span>
				</v-tooltip>
			</div>
		</div>
		<div class="d-flex justify-content-center" v-if="!movingBox">
			<div id="spotify">
				<iframe :src="'https://open.spotify.com/embed/' + getId()" style="width: 100%;" height="380" frameborder="0"
					allowtransparency="true" allow="encrypted-media">
				</iframe>
			</div>
		</div>
	</section>
</template>

<script>
	Vue.component("in-template-spotify", {
		template: "#in-template-spotify",
		computed: {
			...mapGetters('page', [
				'page',
				'editMode',
				'movingBox'
			]),
			...mapGetters('app', [
				'windowWidth'
			])
		},
		methods: {
			...mapActions('page', [
				'toggleModal',
				'setAdding',
				'setEditingType',
				'removeType'
			]),
			...mapActions('app', [
				'scrollPageTo',
			]),

			getId() {
				var parts = this.page.spotify.url.split('/')
				return [
					parts[parts.length - 2],
					parts[parts.length - 1]
				].join('/')
			},

			editType(type) {
				this.setEditingType(type)
				this.toggleModal(false)
				this.setAdding(true)
				setTimeout(() => {
					this.scrollPageTo(type)
				}, 20)
			}
		}
	})

</script>
