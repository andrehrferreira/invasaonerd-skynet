<template id="in-loading">
	<v-layout row wrap>
		<v-flex xs12>
      <v-layout justify-center align-center>
        <v-flex :style="`width: ${inWidth}; height: ${inHeight}; text-align: center;`" v-html="inSvg"></v-flex>
      </v-layout>
    </v-flex>
		<v-flex xs12>
			<p class="text-xs-center title" v-html="inText"></p>
		</v-flex>
	</v-layout>
</template>
<script>
	Vue.component('in-loading', {
		template: '#in-loading',
		props: {
			inWidth: {
				type: String,
				default: '200px',
				required: false
			},
			inHeight: {
				type: String,
				default: '200px',
				required: false
			},
			inSvg: {
				type: String,
				default: `<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid" class="lds-double-ring" style="background: none;"><circle cx="50" cy="50" ng-attr-r="{{config.radius}}" ng-attr-stroke-width="{{config.width}}" ng-attr-stroke="{{config.c1}}" ng-attr-stroke-dasharray="{{config.dasharray}}" fill="none" stroke-linecap="round" r="40" stroke-width="4" stroke="#fdfdfd" stroke-dasharray="62.83185307179586 62.83185307179586" transform="rotate(282 50 50)"><animateTransform attributeName="transform" type="rotate" calcMode="linear" values="0 50 50;360 50 50" keyTimes="0;1" dur="1s" begin="0s" repeatCount="indefinite"></animateTransform></circle><circle cx="50" cy="50" ng-attr-r="{{config.radius2}}" ng-attr-stroke-width="{{config.width}}" ng-attr-stroke="{{config.c2}}" ng-attr-stroke-dasharray="{{config.dasharray2}}" ng-attr-stroke-dashoffset="{{config.dashoffset2}}" fill="none" stroke-linecap="round" r="35" stroke-width="4" stroke="#85a2b6" stroke-dasharray="54.97787143782138 54.97787143782138" stroke-dashoffset="54.97787143782138" transform="rotate(-282 50 50)"><animateTransform attributeName="transform" type="rotate" calcMode="linear" values="0 50 50;-360 50 50" keyTimes="0;1" dur="1s" begin="0s" repeatCount="indefinite"></animateTransform></circle></svg>`,
				required: false
			},
			inText: {
				type: String,
				default: 'Carregando...',
				required: false
			}
		}
	})

</script>
