<script>
	const __utils = {
		install: (Vue, { localStorage, OneSignal }) => {
			
			Vue.prototype.$OneSignal = OneSignal

			Vue.prototype.$urlify = (text) => {
				return text.replace(/(((https?:\/\/)|(www\.))[^\s]+)/g, function(url,b,c) {
					var url2 = (c == 'www.') ?  'http://' + url : url
					return '<a href="' +url2+ '" target="_blank">' + url + '</a>'
				}) 
			}

			Vue.prototype.$clearReactive = (obj) => {
				try {
					return JSON.parse(JSON.stringify(obj))
				} catch (err) {
					return obj
				}
			}

			Vue.prototype.$Lstore = {
				setItem: (key, value) => {
					try {
						localStorage.setItem(key, JSON.stringify(value))
						return true
					} catch (err) {
						console.error(err)
						return false
					}
				},
				getItem: (key) => {
					try {
						return JSON.parse(localStorage.getItem(key))
					} catch (err) {
						console.error(err)
						return false
					}
				},
				removeItem: (key) => {
					localStorage.removeItem(key)
				},
				clear: () => localStorage.clear(),
				has: (key) => localStorage.hasOwnProperty(key)
			}

			Vue.prototype.$formatNumber = (number) => {
				if (typeof number === 'number') {
					if (number > 999999) {
						const nbr = parseFloat((number / 1000000).toFixed(1))
						const isInt = nbr % 1 === 0
						return nbr.toFixed(isInt ? 0 : 1) + ' mi'
					} else if (number > 999) {
						const nbr = parseFloat((number / 1000).toFixed(1))
						const isInt = nbr % 1 === 0
						return nbr.toFixed(isInt ? 0 : 1) + ' mil'
					}
				}
				return number
			}

		}
	}
	Vue.use(__utils, { localStorage, OneSignal })
</script>