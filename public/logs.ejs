<!DOCTYPE html>
<html lang="pt-br">

<head>
	<title>
		<%= __('Appname') %>
	</title>
	<link rel="stylesheet" href="<%= settings.url %>/assets/cdns/css/bootstrap.min.css" />
	<%- include('meta/header') %>
	<link rel="stylesheet" type="text/css" href="<%= settings.url %>/assets/css/page.css" />
	<link rel="stylesheet" href="<%= settings.url %>/assets/css/feedback.css" />

	<meta name="description" content="A maior comunidade nerd do brasil">
	<meta property="og:description" content="A maior comunidade nerd do brasil">

	<meta property="og:image" content="<%= settings.url %>/assets/img/logo-256-white.png">
	<meta property="og:image:type" content="image/png">
	<meta property="og:image:width" content="256">
	<meta property="og:image:height" content="256">

	<meta name="og:title" property="og:title" content="Invasão Nerd">
	<meta property="og:site_name" content="<%= __('Appname') %>">
	<meta property="og:locale" content="pt-br">
	<meta property="og:url" content="<%= settings.url %>">
	<meta property="og:type" content="website">

	<%- include('./meta/gtag.ejs') %>

	<%- include('components/app/navbar') %>
	<%- include('components/app/sidebar') %>
	<%- include('components/app/snackbar') %>
	<div id="app">
		<v-app dark>
			<div ref="ready" style="display: none;">
				<div>
					<in-sidebar :options="{ page: {} }" />
				</div>
				<div>
					<in-navbar />
				</div>
				<v-content>
					<v-container fill-height>
						<v-layout justify-center align-center>
							<v-flex>
								<div v-if="pageLog.logs.length">
									<h2 class="text-center">
										Logs da página
										<a :href="'/page/' + pageLog.title" style="color: white">
											{{ pageLog.title }}
										</a>
									</h2>
									<div class="row pl-2 pr-2 p-1" v-for="(log, index) in pageLog.logs" :key="index">
										<div :id="log.anchor !== log.revisionRef ? log.revisionRef : ''" class="card hoverable col-12 col-md-8 offset-md-2" style="background-color: rgb(75, 75, 75);">
											<div class="card-body">
												<h5 class="card-title">
													Log do dia {{ new Date(log.timestamp).toLocaleDateString() }}
													as {{ new Date(log.timestamp).toLocaleTimeString() }}
												</h5>
												<h5 class="text-center bg-info p-2" v-if="index === 0">Versão Oficial</h5>
												<p class="card-text">
													Edição enviada por: {{ log.userEditor.name }}
													<br>
													<span v-if="log.anchor">Recuperada</span>
													<span v-else>Aprovada</span>
													por: {{ log.userAprovator.name }}
													<br>
													Ação: {{ log.action }}
													<a v-if="log.anchor" class="btn btn-sm bg-dark" @click.stop="showReference(log.anchor)">
														Ver Página de Refência
													</a>
												</p>
												<button v-if="index === 0" @click.stop="goTo('/page/' + pageLog.title)" class="btn btn-success col-sm-12 col-md-4 offset-md-8 col-lg-3 offset-lg-9">
													<i class="fa fa-eye"></i>
													Visualizar
												</button>
												<button v-else @click.stop="goTo('/log/' + log.revisionRef)" class="btn btn-success col-sm-12 col-md-4 offset-md-8 col-lg-3 offset-lg-9">
													<i class="fa fa-eye"></i>
													Visualizar
												</button>
											</div>
										</div>
									</div>
								</div>

								<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-hidden="true">
									<div class="modal-dialog" role="document">
										<div class="modal-content" style="background-color: rgb(75, 75, 75);">
											<div class="modal-header">
												<h5 class="modal-title">Confirmar Descarte</h5>
												<button type="button" class="close" data-dismiss="modal" aria-label="Close">
													<span aria-hidden="true">&times;</span>
												</button>
											</div>
											<div class="modal-body">
												<div class="row p-2">
													Informe um motivo para o descarte desta edição
												</div>
												<div class="row p-2">
													<v-text-field type="text" v-model="anotation" autocomplete></v-text-field>
												</div>
											</div>
											<div class="modal-footer">
												<button type="button" @click.stop="anotation = ''" data-dismiss="modal" class="btn btn-danger btn-lg col-md-4 col-sm-6">
													Cancelar
												</button>
												<button @click.stop="discardRevision" type="button" class="btn btn-success btn-lg col-md-4 col-sm-6">
													Descartar
												</button>
											</div>
										</div>
									</div>
								</div>
							</v-flex>
						</v-layout>
					</v-container>
				</v-content>
				<div>
					<in-snackbar />
				</div>
			</div>
		</v-app>
	</div>

	<%- include('./meta/footer') %>
	<script>
		new Vue({
			store: new Vuex.Store({
				modules: {
					app: {
						namespaced: true,
						state: <%- include('store/app/state.js') %>,
						getters: <%- include('store/app/getters.js') %>,
						mutations: <%- include('store/app/mutations.js') %>,
						actions: <%- include('store/app/actions.js') %>
					}
				}
			}),
			el: '#app',
			computed: {
				...mapGetters('app', ['user'])
			},
			data() {
				return {
					page: {},
					pageLog: <%- JSON.stringify(log) %>,
					anotation: ''
				}
			},
			created() {
				this.setUser(<%- JSON.stringify(user) %>)
			},
			mounted() {
				this.$refs.ready.style.display = 'block'
				this.pageLog.logs = this.pageLog.logs.sort((a, b) => {
					return b.timestamp - a.timestamp
				})
			},
			methods: {
				...mapActions('app', [
					'showDialog',
					'goTo',
					'setUser'
				]),

				showReference(ref) {
					location.href = '#' + ref
					const card = document.getElementById(ref)
					card.style.backgroundColor = 'rgb(100, 100, 100)'
					setTimeout(() => {
						card.style.backgroundColor = 'rgb(75, 75, 75)'
					}, 2000)
				},

				toggleModal(page) {
					this.toRemove = page
					$('#modal').modal('toggle')
				}
			},
			beforeMount() {
				var loading = document.querySelector("#loading")
				document.body.removeChild(loading)
			}
		})
	</script>

</body>

</html>
